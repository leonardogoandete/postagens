name: SonarCloud
on:
  push:
    branches:
      - master
  release:
    types: [ published ]

jobs:
  build-and-analyze:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-repo
        uses: actions/checkout@v3

      - name: GitHub Tag Name example
        run: |
          echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
          echo "Tag name from github.ref_name: ${{  github.ref_name }}"

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=leonardogoandete_postagens -Pcoverage

      - name: Security Scanner
        uses: aquasecurity/trivy-action@0.14.0
        with:
          scan-type: 'fs'
          scan-ref: '.'

      - name: Build do projeto
        run: docker build -t leogoandete/postagens:latest .

      - name: Autenticando no docker registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Enviando a imagem para o Dockerhub
        run: docker push leogoandete/postagens:latest

  gerando-imagem-docker:
    if: github.event_name == 'release' && github.event.action == 'published'
#   o job de build-and-analyze precisa ter passado para iniciar a geração de imagem
    needs:
      - build-and-analyze
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout gh-repo
        uses: actions/checkout@v3

      - name: Build do projeto
        run: docker build -t leogoandete/postagens:$GITHUB_REF_NAME .

      - name: Autenticando no docker registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Enviando a imagem para o Dockerhub
        run: docker push leogoandete/postagens:$GITHUB_REF_NAME